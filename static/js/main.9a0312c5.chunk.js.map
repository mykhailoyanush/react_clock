{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","timerId","setInterval","date","this","setState","Date","toLocaleTimeString","console","log","prevProps","name","props","clearInterval","className","React","Component","App","isClockVisible","clockName","showClock","hideClock","changeName","randomChars","result","i","charAt","Math","floor","random","length","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAYaA,EAAb,4MACEC,MAAQ,CACNC,QAASC,aAAY,cAAU,GAC/BC,KAAM,IAHV,uDAME,WAAqB,IAAD,OAClBC,KAAKJ,MAAMC,QAAUC,aAAY,WAC/B,EAAKG,SAAS,CAAEF,MAAM,IAAIG,MAAOC,uBAGjCC,QAAQC,IAAI,UAAY,EAAKT,MAAMG,QAClC,OAZP,gCAeE,SAAmBO,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eAA+DP,KAAKQ,MAAMD,SAlBhF,kCAsBE,WACEE,cAAcT,KAAKJ,MAAMC,WAvB7B,oBA0BE,WACE,OACE,qCACE,sBAAMa,UAAU,cAAhB,SAA+BV,KAAKJ,MAAMG,OAC1C,mBAAGW,UAAU,cAAb,8BAA0CV,KAAKQ,MAAMD,eA9B7D,GAA2BI,IAAMC,WCR3BC,E,4MACJjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,Q,EAGbC,UAAY,WACV,EAAKf,SAAS,CAAEa,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKhB,SAAS,CAAEa,gBAAgB,K,EAGlCI,WAAa,WAIX,IAHA,IAAMC,EAAc,iEAChBC,EAAS,GAEJC,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC3BD,GAAUD,EAAYG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWN,EAAYO,SAGtE,EAAKzB,SAAS,CAAEc,UAAWK,K,4CAG7B,WACE,OACE,sBAAKV,UAAU,MAAf,UACE,6CACA,8CAEG,IACAV,KAAKJ,MAAMkB,gBAAkB,cAAC,EAAD,CAAOP,KAAMP,KAAKJ,MAAMmB,eAGxD,wBAAQY,KAAK,SAASjB,UAAU,cAAckB,QAAS5B,KAAKgB,UAA5D,wBACA,wBAAQW,KAAK,SAASjB,UAAU,cAAckB,QAAS5B,KAAKiB,UAA5D,wBACA,wBAAQU,KAAK,SAASjB,UAAU,cAAckB,QAAS5B,KAAKkB,WAA5D,oC,GArCUP,IAAMC,WA2CTC,IC5CfgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9a0312c5.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  timerId: NodeJS.Timer,\n  date: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    timerId: setInterval(() => {}, 0),\n    date: '',\n  };\n\n  componentDidMount() {\n    this.state.timerId = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line\n      console.log('Clock: ' + this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  render() {\n    return (\n      <>\n        <span className=\"clock__time\">{this.state.date}</span>\n        <p className=\"clock__name\">{`ClassName: ${this.props.name}`}</p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 'test',\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  changeName = () => {\n    const randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let result = '';\n\n    for (let i = 0; i < 10; i += 1) {\n      result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n    }\n\n    this.setState({ clockName: result });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"app\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n        </p>\n\n        <button type=\"button\" className=\"app__button\" onClick={this.showClock}>Show Clock</button>\n        <button type=\"button\" className=\"app__button\" onClick={this.hideClock}>Hide Clock</button>\n        <button type=\"button\" className=\"app__button\" onClick={this.changeName}>Set random name</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}